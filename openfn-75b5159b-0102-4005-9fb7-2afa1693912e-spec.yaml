name: unicare-bih-turkey
description: |
  UNICARE workflows for InForm-Primero data sync for Turkey and Bosnia country offices
collections: null
credentials:
  aleksa@openfn.org-PROD-Unicare-BiH-Primero:
    name: PROD Unicare BiH Primero
    owner: aleksa@openfn.org
  aleksa@openfn.org-PROD-Unicare-TUR-Primero:
    name: PROD Unicare TUR Primero
    owner: aleksa@openfn.org
  aleksa@openfn.org-Unicare-BIH-Primero-Demo:
    name: Unicare BIH Primero Demo
    owner: aleksa@openfn.org
  aleksa@openfn.org-Unicare-Turkey-Primero-Demo:
    name: Unicare Turkey Primero Demo
    owner: aleksa@openfn.org
  aleksa@openfn.org-Unicef-Inform:
    name: Unicef Inform
    owner: aleksa@openfn.org
workflows:
  auth-testing:
    name: auth-testing
    jobs:
      primero-auth-test:
        name: primero auth test
        adaptor: '@openfn/language-primero@4.0.2'
        credential: aleksa@openfn.org-PROD-Unicare-TUR-Primero
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          getLocations({
          page: 1,
          per: 2
          })
    triggers:
      webhook:
        type: webhook
        enabled: false
    edges:
      webhook->primero-auth-test:
        source_trigger: webhook
        target_job: primero-auth-test
        condition_type: always
        enabled: true
  inform-to-unicare-bih-demo:
    name: inform-to-unicare-bih-demo
    jobs:
      Transform-and-Map-data:
        name: Transform and Map data
        adaptor: '@openfn/language-common@2.3.1'
        credential: null
        body: |
          fn(state => {
            console.log('Preparing and cleaning case data...');
            //Prepare mapping constants between inform and primero
            const genderMapping = {
              "Male": "male",
              "Female": "female",
              "Non_binary": "other",
              "Prefer_not_to_say": "preferred_not_to_indicate_37248fa",
              "Mixed_group_of_people": "mixed_group_of_people_529e88d"
            };

            const nationalityMapping = {
              "Afghanistan": "afghanistan",
              "Albania": "albania",
              "Algeria": "algeria",
              "Andorra": "andorra",
              "Angola": "angola",
              "Antigua_and_Barbuda": "antigua_and_barbuda",
              "Argentina": "argentina",
              "Armenia": "armenia",
              "Australia": "australia",
              "Austria": "austria",
              "Azerbaijan": "azerbaijan",
              "Bahamas": "bahamas",
              "Bahrain": "bahrain",
              "Bangladesh": "bangladesh",
              "Barbados": "barbados",
              "Belarus": "belarus",
              "Belgium": "belgium",
              "Belize": "belize",
              "Benin": "benin",
              "Bhutan": "bhutan",
              "Bolivia": "bolivia",
              "Bosnia_and_Herzegovina": "bosnia_and_herzegovina",
              "Botswana": "botswana",
              "Brazil": "brazil",
              "Brunei": "brunei",
              "Bulgaria": "bulgaria",
              "Burkina Faso": "burkina_faso",
              "Burundi": "burundi",
              "Cabo Verde": "cabo_verde",
              "Cambodia": "cambodia",
              "Cameroon": "cameroon",
              "Canada": "canada",
              "Central_African_Republic": "central_african_republic",
              "Chad": "chad",
              "Chile": "chile",
              "China": "china",
              "Colombia": "colombia",
              "Comoros": "comoros",
              "Congo-Brazzaville": "congo",
              "Democratic_Republic_of_the_Congo": "drc",
              "Costa_Rica": "costa_rica",
              "Cote_d'Ivoire": "cote_divoire",
              "Croatia": "croatia",
              "Cuba": "cuba",
              "Cyprus": "cyprus",
              "Czechia": "czech_republic",
              "Denmark": "denmark",
              "Djibouti": "djibouti",
              "Dominica": "dominica",
              "Dominican_Republic": "dominican_republic",
              "Ecuador": "ecuador",
              "Egypt": "egypt",
              "El_Salvador": "el_salvador",
              "Equatorial_Guinea": "equatorial_guinea",
              "Eritrea": "eritrea",
              "Estonia": "estonia",
              "Ethiopia": "ethiopia",
              "Fiji": "fiji",
              "Finland": "finland",
              "France": "france",
              "Gabon": "gabon",
              "Gambia": "gambia",
              "Georgia": "georgia",
              "Germany": "germany",
              "Ghana": "ghana",
              "Greece": "greece",
              "Grenada": "grenada",
              "Guatemala": "guatemala",
              "Guinea": "guinea",
              "Guinea_Bissau": "guinea_bissau",
              "Guyana": "guyana",
              "Haiti": "haiti",
              "Honduras": "honduras",
              "Hungary": "hungary",
              "Iceland": "iceland",
              "India": "india",
              "Indonesia": "indonesia",
              "Iran": "iran",
              "Iraq": "iraq",
              "Ireland": "ireland",
              "Israel": "israel",
              "Italy": "italy",
              "Jamaica": "jamaica",
              "Japan": "japan",
              "Jordan": "jordan",
              "Kazakhstan": "kazakhstan",
              "Kenya": "kenya",
              "Kiribati": "kiribati",
              "Kosovo": "kosovo",
              "Kuwait": "kuwait",
              "Kyrgyzstan": "kyrgyzstan",
              "Laos": "laos",
              "Latvia": "latvia",
              "Lebanon": "lebanon",
              "Lesotho": "lesotho",
              "Liberia": "liberia",
              "Libya": "libya",
              "Liechtenstein": "liechtenstein",
              "Lithuania": "lithuania",
              "Luxembourg": "luxembourg",
              "Macedonia": "macedonia",
              "Madagascar": "madagascar",
              "Malawi": "malawi",
              "Malaysia": "malaysia",
              "Maldives": "maldives",
              "Mali": "mali",
              "Malta": "malta",
              "Marshall_Islands": "marshall_islands",
              "Mauritania": "mauritania",
              "Mauritius": "mauritius",
              "Mexico": "mexico",
              "Micronesia": "micronesia",
              "Moldova": "moldova",
              "Monaco": "monaco",
              "Mongolia": "mongolia",
              "Montenegro": "montenegro",
              "Morocco": "morocco",
              "Mozambique": "mozambique",
              "Myanmar": "myanmar",
              "Namibia": "namibia",
              "Nauru": "nauru",
              "Nepal": "nepal",
              "Netherlands": "netherlands",
              "New_Zealand": "new_zealand",
              "Nicaragua": "nicaragua",
              "Niger": "niger",
              "Nigeria": "nigeria",
              "North_Korea": "north_korea",
              "Norway": "norway",
              "Oman": "oman",
              "Pakistan": "pakistan",
              "Palau": "palau",
              "Palestine_State": "palestine",
              "Panama": "panama",
              "Papua_New_Guinea": "papua_new_guinea",
              "Paraguay": "paraguay",
              "Peru": "peru",
              "Philippines": "philippines",
              "Poland": "poland",
              "Portugal": "portugal",
              "Qatar": "qatar",
              "Romania": "romania",
              "Russia": "russia",
              "Rwanda": "rwanda",
              "Saint_Kitts_and_Nevis": "st_kitts_and_nevis",
              "Saint_Lucia": "st_lucia",
              "Saint_Vincent_and_the_Grenadines": "st_vincent_and_the_grenadines",
              "Samoa": "samoa",
              "San_Marino": "san_marino",
              "Sao_Tome_and_Principe": "sao_tome_and_principe",
              "Saudi_Arabia": "saudi_arabia",
              "Senegal": "senegal",
              "Serbia": "serbia",
              "Seychelles": "seychelles",
              "Sierra_Leone": "sierra_leone",
              "Singapore": "singapore",
              "Slovakia": "slovakia",
              "Slovenia": "slovenia",
              "Solomon_Islands": "solomon_islands",
              "Somalia": "somalia",
              "South_Africa": "south_africa",
              "South_Korea": "south_korea",
              "South_Sudan": "south_sudan",
              "Spain": "spain",
              "Sri_Lanka": "sri_lanka",
              "Sudan": "sudan",
              "Suriname": "suriname",
              "Swaziland": "swaziland",
              "Sweden": "sweden",
              "Switzerland": "switzerland",
              "Syria": "syria",
              "Taiwan": "taiwan",
              "Tajikistan": "tajikistan",
              "Tanzania": "tanzania",
              "Thailand": "thailand",
              "Timor-Leste": "timor_leste",
              "Togo": "togo",
              "Tonga": "tonga",
              "Trinidad_and_Tobago": "trinidad_and_tobago",
              "Tunisia": "tunisia",
              "Turkey": "turkey",
              "Turkmenistan": "turkmenistan",
              "Tuvalu": "tuvalu",
              "Uganda": "uganda",
              "Ukraine": "ukraine",
              "United_Arab_Emirates": "united_arab_emirates",
              "United_Kingdom": "uk",
              "United_States_of_America": "usa",
              "Uruguay": "uruguay",
              "Uzbekistan": "uzbekistan",
              "Vanuatu": "vanuatu",
              "Vatican_City": "vatican",
              "Venezuela": "venezuela",
              "Vietnam": "vietnam",
              "Yemen": "yemen",
              "Zambia": "zambia",
            }

            const ageRangeMapping = {
              "5_9yrs": "0_17_years_old_a619c9b",
              "10_14yrs": "18_59_years_old_b6fd344",
              "15_18yrs": "not_indicated_4f3457b",
              "19_25yrs": "19_25_years_old_4d4ddce",
              "26_59yrs": "26_59_years_old_04359cb",
              "60_above_yrs": "60_and_above_b0f9d41",
              "Unknown": "unknown_3e07f9e",
              "Mixed_group_of_people": "mixed_group_of_people_f34be4b"
            };

            const caseCategoryMapping = {
              "pending_categorization": "_pending_categorization__f2609f3",
              "request_info_1": "request_or_suggestion_debcecd",
              "request_info_2": "request_for_information___about_response_actors_be74193",
              "request_info_3": "request_for_information___about_information_provision_and_feedback_channels_35e1766",
              "request_info_4": "request_for_information___other_cec52c2",
              "request_assistance_1": "report_8751b89",
              "request_assistance_2": "request_for_assistance_or_services___civil_registration_and_legal_documentation_efc993f",
              "request_assistance_3": "request_for_assistance_or_services___other_9639ea2",
              "complaint_assist_activities_1": "observation__perception_or_belief_0230bfc",
              "complaint_assist_activities_2": "complaint_about_assistance_and_activities___issues_with_the_activities_or_assistance_services_provided__5b0d1fd",
              "complaint_assist_activities_3": "complaint_about_assistance_and_activities___issues_with_aid_items_11715aa",
              "complaint_assist_activities_4": "complaint_about_assistance_and_activities___other_c3d4da3",
              "complaint_behavior_1": "other_61db39d",
              "complaint_behavior_2": "complaint_about_the_behavior_of_aid_workers___allegation_of_child_marriage__similar_union_with_a_child_or_sexual_activity_with_a_child_7b260a2",
              "complaint_behavior_3": "complaint_about_the_behavior_of_aid_workers___allegation_of_harmful_practices_a7bc0bc",
              "complaint_behavior_4": "complaint_about_the_behavior_of_aid_workers___allegation_of_slave_forced_exploitative_labour_and_or_human_trafficking_c9bbb82",
              "complaint_behavior_5": "complaint_about_the_behavior_of_aid_workers___allegation_of_corruption__bribery__theft_or_fraud_a5a9862",
              "complaint_behavior_6": "complaint_about_the_behavior_of_aid_workers___allegation_of_negligence_on_professional_or_personal_capacity_cac54d9",
              "complaint_behavior_7": "complaint_about_the_behavior_of_aid_workers___allegation_of_physical_violence_or_verbal_abuse_d2854bf",
              "complaint_behavior_8": "complaint_about_the_behavior_of_aid_workers___allegation_of_harassment__including_sexual_harassment___a354c46",
              "complaint_behavior_9": "complaint_about_the_behavior_of_aid_workers___allegation_of_breach_of_duties_of_independence__neutrality__and_impartiality_7ef6b4b",
              "complaint_behavior_10": "complaint_about_the_behavior_of_aid_workers___allegation_of_less_serious_safeguarding_concerns_22ffb8a",
              "complaint_behavior_11": "complaint_about_the_behavior_of_aid_workers___allegation_of_unethical_evidence_activities_2521f33",
              "safety_security_1": "report_on_safety_or_security_issue_0ec19e4",
              "safety_security_2": "safety_and_security___missing_person_reports_991cd84",
              "safety_security_3": "safety_and_security___occupational_health_and_safety_incidents_a44e245",
              "safety_security_4": "safety_and_security___environmental_and_social_violations_and_incidents_fb29146",
              "safety_security_5": "safety_and_security___security_incidents_3693bfa",
              "safety_security_6": "safety_and_security___diversion_of_aid__dc68a2a",
              "safety_security_7": "safety_and_security___politicization_of_aid_aec953e",
              "safety_security_8": "safety_and_security___data_breaches_and_information_security_incidents_3da9b20",
              "safety_security_9": "safety_and_security___other_b4fa79a",
              "observations_suggestions_1": "observation_or_suggestion_aa54ec9",
              "observations_suggestions_2": "observations_and_suggestions___about_access_to_information_and_assistance_bc7a83b",
              "observations_suggestions_3": "observations_and_suggestions___about_community_beliefs_and_rumours_a6def10",
              "observations_suggestions_4": "observations_and_suggestions___other_773c9d9",
              "data_subject_request_1": "data_subject_request_bed8a87",
              "data_subject_request_2": "data_subject_request___information_about_the_personal_data_processing_1fd7b69",
              "data_subject_request_3": "data_subject_request___copy_of_own_personal_data_38d808c",
              "data_subject_request_4": "data_subject_request___delete_personal_data__partial_or_total___88c6d9a",
              "data_subject_request_5": "data_subject_request___correct_update_personal_data_260c6c9",
              "data_subject_request_6": "data_subject_request___limit_the_processing_of_personal_data_29b9a14",
              "data_subject_request_7": "data_subject_request___human_review_of_automated_decision_making_7182a3a",
              "issue_cfrm_1": "issue_interacting_with_the_cfrm_08dab07",
              "issue_cfrm_2": "data_subject_request____63f5862",
              "issue_cfrm_3": "issue_interacting_with_the_cfrm___abusive_malicious_feedback_providers_2c2ab65",
              "issue_cfrm_4": "issue_interacting_with_the_cfrm___cancelled_submissions_8fafbaa",
              "issue_cfrm_5": "issue_interacting_with_the_cfrm___other_f662a8e"
            };

            const programmaticAreaMapping = {
              "Pending_categorization": "local_integration_4721a6c",
              "Not_applicable": "sexual_exploitation_and_abuse__sea__c2b098e",
              "Adolescent_Development_and_Participation": "a__adolescent_development_and_participation_b19f2ba",
              "Access_and_Logistics": "logistics_f1ce006",
              "Camp_Coordination_and_Camp_Management": "camp_coordination_and_camp_management__cccm__e9d90b3",
              "Cash_Assistance_and_Social_Protection": "cash_assistance_086f72b",
              "Civil-Military_Coordination": "civil_military_coordination_87b1aca",
              "Child_Protection": "child_protection_72b4d71",
              "Disability_and_Inclusion": "disability_and_inclusion_e537ca8",
              "Early_Childhood_Development": "early_childhood_development_2c517c5",
              "Education": "education_d3bfe8f",
              "Early_Recovery": "early_recovery_c6e511c",
              "Emergency_Telecommunications": "emergency_telecommunications_ee553b2",
              "Energy_and_Environment": "energy_and_environment_fd73e2b",
              "Food_Security_and_Livelihoods": "food_security_0e10495",
              "Gender_Based_Violence": "gender_based_violence__gbv__781a991",
              "Health_and_Immunisation": "health_ee4020e",
              "Housing,_Land_and_Property": "housing__land_and_property_109da85",
              "Mental_Health_and_Psychosocial_Support": "mental_health_and_psychosocial_support__mhpss__abac8de",
              "Migrants": "migrants__registration__resettlement__rsd__repatriation__local_integration__complementary_pathways__etc___aa10d1b",
              "Mine_Action": "mine_action_f5161ba",
              "Nutrition": "nutrition_03abf98",
              "Parenting": "parenting_84b0c4c",
              "Protection": "protection_0e30687",
              "Shelter": "shelter_ae9eb74",
              "Social_and_Behaviour_Change": "social_and_behaviour_change__sbc__b64e02a",
              "WASH": "wash_d59fd40"
            };

            const locationMapping = {
              "admin1": "BIH001",
              "admin2": "BIH002",
              "admin3": "BIH003",
              "admin4": "BIH004",
              "admin5": "BIH005",
              "admin6": "BIH006",
              "admin7": "BIH007",
              "admin8": "BIH008",
              "admin9": "BIH010",
              "admin15": "BIH016",
              "admin16": "BIH009",
              "admin17": "BIH017"
            };

            const vulnerabilityMapping = {
              "None": "none_9052aa8",
              "Alcohol_drug_abuse_in_family": "alcohol__drug_abuse_in_family_0e1da79",
              "Child_headed_household": "orphan_f6104f0",
              "HIV+": "hiv__64150e2",
              "IDP_Refugee_Statelessness": "statelessness_51c7096",
              "Member_of_marginalised_group": "member_of_marginalised_group__eg__due_to_religion__ethnicity__496febf",
              "Person_with_disability": "person_with_special_needs_afa807f",
              "Pregnant_or_lactating_woman": "idp_d535e6f",
              "Unaccompanied_or_separated_children": "refugee_4fa85ce",
              "Mixed_group_of_people": "mixed_group_of_people_e7aa51f"
            };

            const languageMapping = {
              "Language1": "language1",
              "Language2": "language4",
              "Language3": "language5",
              "Language4": "language6",
              "Language5": "language2",
              "Language6": "language7",
              "Other": "language8"
            };

            const consentFromMapping = {
              "Individual": "individual__self_reporting__e45b925",
              "Caregiver": "caregiver__legal_guardian__4df2a59",
              "Social_worker": "social_worker_0cd94f9",
              "Teacher": "teacher_99ba24d",
              "Other": "other_5b3b632"
            };

            const formatPreferredChannelOfCommunication = (text) => {
              if (text === null || text === undefined) {
                return '';
              }
              return text.replace(/_/g, ' ');
            };

            const checkDisclosure = (disclosure) => {
              if (disclosure) {
                return disclosure === "OK";
              }
              return false;
            };

            const formatRegistrationDate = (date) => {
              const parsedDate = dateFns.parse(date, "dd-MMM-yyyy", new Date());

              return dateFns.format(parsedDate, "yyyy-MM-dd");
            }

            //Perform input data mapping
            state.mappedData = {
              registration_date: formatRegistrationDate(state.data.registration_date),
              sex: genderMapping[state.data.sex],
              age_range_3df3bdb: ageRangeMapping[state.data.age_range],
              protection_status: caseCategoryMapping[state.data.case_category_80a3d81],
              protection_concerns:   (state.data.programmatic_area || "")
                .split(" ")
                .map(factor => programmaticAreaMapping[factor])
                .filter(Boolean),
              location_current: locationMapping[state.data.location],
              diversity_factor_s__98eb91b: (state.data.vulnerability_factor || "")
                .split(" ")
                .map(factor => vulnerabilityMapping[factor])
                .filter(Boolean),
              nationality: [nationalityMapping[state.data.nationality]],
              preferred_channel_of_communication_f25a28d: formatPreferredChannelOfCommunication(state.data.preferred_channel_of_communication),
              disclosure_other_orgs: checkDisclosure(state.data.disclosure_other_orgs),
              language: [languageMapping[state.data.language]],
              consent_assent_obtained_from_c4a5c9e: (state.data.consent || "")
                .split(" ")
                .map(factor => consentFromMapping[factor])
                .filter(Boolean)
            }

            return state;

          });

      Register-feedback-in-Primero:
        name: Register feedback in Primero
        adaptor: '@openfn/language-primero@3.1.0'
        credential: aleksa@openfn.org-Unicare-BIH-Primero-Demo
        body: |
          // //Create/Update case to be sent to primero
          fn(state => {
            state.attachments = state.data['_attachments'];
            return state
          })

          upsertCase({
            externalIds: ["case_id"],
            data: state => ({
              case_id: state.data._uuid,
              registration_date: state.mappedData.registration_date,
              location_current: state.mappedData.location_current, 
              feedback_comment_f076498: state.data.feedback_comment,
              sex: state.mappedData.sex,
              name_first: state.data.name_first,
              name_last: state.data.name_last,
              age_range_3df3bdb: state.mappedData.age_range_3df3bdb,
              disclosure_other_orgs: state.mappedData.disclosure_other_orgs, 
              date_of_birth: state.data.date_of_birth,
              nationality: state.mappedData.nationality,
              preferred_channel_of_communication_f25a28d: state.mappedData.preferred_channel_of_communication_f25a28d, 
              protection_status: state.mappedData.protection_status,
              protection_concerns: state.mappedData.protection_concerns,
              telephone_current: state.data.channel_of_communication_phonenumber,
              email_b3fb5e0: state.data.channel_of_communication_email,
              address_current: state.data.channel_of_communication_physical_address,
              language: state.mappedData.language,
              consent_assent_obtained_from_c4a5c9e: state.mappedData.consent_assent_obtained_from_c4a5c9e,
              consent_source_other: state.data.consent_other,
              immediate_actions_taken_in_response_to_the_feedback_received_ecd46ba: state.data.immediate_actions,
              other_language_of_interaction_00ed07f: state.data.language_comment,
              diversity_factor_s__98eb91b: state.mappedData.diversity_factor_s__98eb91b,
              feedback_channel_eba5764: 'mobile_teams__field_staff__monitors_afdfc51',
              module_id: "primeromodule-cp",
            }),
          });

      Get-attachment-From-Inform:
        name: Get attachment From Inform
        adaptor: '@openfn/language-inform@1.0.1'
        credential: aleksa@openfn.org-Unicef-Inform
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          fn(state =>{
            state.primeroCaseId = state.data.id;
            return state
          })

          downloadAttachment($.attachments[0].id, {
          filename: $.attachments[0].filename,
          parseAs: 'base64',
          });

      Upload-attachment-to-Primero:
        name: Upload attachment to Primero
        adaptor: '@openfn/language-primero@3.1.0'
        credential: aleksa@openfn.org-Unicare-BIH-Primero-Demo
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          fn(async (state) => {
            const attachments = state.attachments[0]; 
            const imageEncodedString = state.data; 

            delete state.data; 

            state.data = {
              attachment: imageEncodedString,
              attachment_type: "image",         
              content_type: attachments.mimetype,
              date: new Date().toISOString(),
              field_name: "photos",            
              file_name: attachments.name,
              is_current: false
            };

            return state;
          });


          http.post(`cases/${$.primeroCaseId}/attachments`, $.data)

    triggers:
      webhook:
        type: webhook
        enabled: true
    edges:
      webhook->Transform-and-Map-data:
        source_trigger: webhook
        target_job: Transform-and-Map-data
        condition_type: always
        enabled: true
      Transform-and-Map-data->Register-feedback-in-Primero:
        source_job: Transform-and-Map-data
        target_job: Register-feedback-in-Primero
        condition_type: on_job_success
        enabled: true
      Register-feedback-in-Primero->Get-attachment-From-Inform:
        source_job: Register-feedback-in-Primero
        target_job: Get-attachment-From-Inform
        condition_type: js_expression
        condition_label: Attachment Exists
        condition_expression: |
          state.data.id && state.attachments && state.attachments?.length > 0

        enabled: true
      Get-attachment-From-Inform->Upload-attachment-to-Primero:
        source_job: Get-attachment-From-Inform
        target_job: Upload-attachment-to-Primero
        condition_type: on_job_success
        enabled: true
  inform-to-unicare-bih-prod:
    name: inform-to-unicare-bih-prod
    jobs:
      Transform-and-Map-data:
        name: Transform and Map data
        adaptor: '@openfn/language-common@2.3.1'
        credential: null
        body: |
          fn(state => {
            console.log('Preparing and cleaning case data...');
            //Prepare mapping constants between inform and primero
            const genderMapping = {
              "Male": "male",
              "Female": "female",
              "Non_binary": "other",
              "Prefer_not_to_say": "preferred_not_to_indicate_37248fa",
              "Mixed_group_of_people": "mixed_group_of_people_529e88d"
            };

            const nationalityMapping = {
              "Afghanistan": "afghanistan",
              "Albania": "albania",
              "Algeria": "algeria",
              "Andorra": "andorra",
              "Angola": "angola",
              "Antigua_and_Barbuda": "antigua_and_barbuda",
              "Argentina": "argentina",
              "Armenia": "armenia",
              "Australia": "australia",
              "Austria": "austria",
              "Azerbaijan": "azerbaijan",
              "Bahamas": "bahamas",
              "Bahrain": "bahrain",
              "Bangladesh": "bangladesh",
              "Barbados": "barbados",
              "Belarus": "belarus",
              "Belgium": "belgium",
              "Belize": "belize",
              "Benin": "benin",
              "Bhutan": "bhutan",
              "Bolivia": "bolivia",
              "Bosnia_and_Herzegovina": "bosnia_and_herzegovina",
              "Botswana": "botswana",
              "Brazil": "brazil",
              "Brunei": "brunei",
              "Bulgaria": "bulgaria",
              "Burkina Faso": "burkina_faso",
              "Burundi": "burundi",
              "Cabo Verde": "cabo_verde",
              "Cambodia": "cambodia",
              "Cameroon": "cameroon",
              "Canada": "canada",
              "Central_African_Republic": "central_african_republic",
              "Chad": "chad",
              "Chile": "chile",
              "China": "china",
              "Colombia": "colombia",
              "Comoros": "comoros",
              "Congo-Brazzaville": "congo",
              "Democratic_Republic_of_the_Congo": "drc",
              "Costa_Rica": "costa_rica",
              "Cote_d'Ivoire": "cote_divoire",
              "Croatia": "croatia",
              "Cuba": "cuba",
              "Cyprus": "cyprus",
              "Czechia": "czech_republic",
              "Denmark": "denmark",
              "Djibouti": "djibouti",
              "Dominica": "dominica",
              "Dominican_Republic": "dominican_republic",
              "Ecuador": "ecuador",
              "Egypt": "egypt",
              "El_Salvador": "el_salvador",
              "Equatorial_Guinea": "equatorial_guinea",
              "Eritrea": "eritrea",
              "Estonia": "estonia",
              "Ethiopia": "ethiopia",
              "Fiji": "fiji",
              "Finland": "finland",
              "France": "france",
              "Gabon": "gabon",
              "Gambia": "gambia",
              "Georgia": "georgia",
              "Germany": "germany",
              "Ghana": "ghana",
              "Greece": "greece",
              "Grenada": "grenada",
              "Guatemala": "guatemala",
              "Guinea": "guinea",
              "Guinea_Bissau": "guinea_bissau",
              "Guyana": "guyana",
              "Haiti": "haiti",
              "Honduras": "honduras",
              "Hungary": "hungary",
              "Iceland": "iceland",
              "India": "india",
              "Indonesia": "indonesia",
              "Iran": "iran",
              "Iraq": "iraq",
              "Ireland": "ireland",
              "Israel": "israel",
              "Italy": "italy",
              "Jamaica": "jamaica",
              "Japan": "japan",
              "Jordan": "jordan",
              "Kazakhstan": "kazakhstan",
              "Kenya": "kenya",
              "Kiribati": "kiribati",
              "Kosovo": "kosovo",
              "Kuwait": "kuwait",
              "Kyrgyzstan": "kyrgyzstan",
              "Laos": "laos",
              "Latvia": "latvia",
              "Lebanon": "lebanon",
              "Lesotho": "lesotho",
              "Liberia": "liberia",
              "Libya": "libya",
              "Liechtenstein": "liechtenstein",
              "Lithuania": "lithuania",
              "Luxembourg": "luxembourg",
              "Macedonia": "macedonia",
              "Madagascar": "madagascar",
              "Malawi": "malawi",
              "Malaysia": "malaysia",
              "Maldives": "maldives",
              "Mali": "mali",
              "Malta": "malta",
              "Marshall_Islands": "marshall_islands",
              "Mauritania": "mauritania",
              "Mauritius": "mauritius",
              "Mexico": "mexico",
              "Micronesia": "micronesia",
              "Moldova": "moldova",
              "Monaco": "monaco",
              "Mongolia": "mongolia",
              "Montenegro": "montenegro",
              "Morocco": "morocco",
              "Mozambique": "mozambique",
              "Myanmar": "myanmar",
              "Namibia": "namibia",
              "Nauru": "nauru",
              "Nepal": "nepal",
              "Netherlands": "netherlands",
              "New_Zealand": "new_zealand",
              "Nicaragua": "nicaragua",
              "Niger": "niger",
              "Nigeria": "nigeria",
              "North_Korea": "north_korea",
              "Norway": "norway",
              "Oman": "oman",
              "Pakistan": "pakistan",
              "Palau": "palau",
              "Palestine_State": "palestine",
              "Panama": "panama",
              "Papua_New_Guinea": "papua_new_guinea",
              "Paraguay": "paraguay",
              "Peru": "peru",
              "Philippines": "philippines",
              "Poland": "poland",
              "Portugal": "portugal",
              "Qatar": "qatar",
              "Romania": "romania",
              "Russia": "russia",
              "Rwanda": "rwanda",
              "Saint_Kitts_and_Nevis": "st_kitts_and_nevis",
              "Saint_Lucia": "st_lucia",
              "Saint_Vincent_and_the_Grenadines": "st_vincent_and_the_grenadines",
              "Samoa": "samoa",
              "San_Marino": "san_marino",
              "Sao_Tome_and_Principe": "sao_tome_and_principe",
              "Saudi_Arabia": "saudi_arabia",
              "Senegal": "senegal",
              "Serbia": "serbia",
              "Seychelles": "seychelles",
              "Sierra_Leone": "sierra_leone",
              "Singapore": "singapore",
              "Slovakia": "slovakia",
              "Slovenia": "slovenia",
              "Solomon_Islands": "solomon_islands",
              "Somalia": "somalia",
              "South_Africa": "south_africa",
              "South_Korea": "south_korea",
              "South_Sudan": "south_sudan",
              "Spain": "spain",
              "Sri_Lanka": "sri_lanka",
              "Sudan": "sudan",
              "Suriname": "suriname",
              "Swaziland": "swaziland",
              "Sweden": "sweden",
              "Switzerland": "switzerland",
              "Syria": "syria",
              "Taiwan": "taiwan",
              "Tajikistan": "tajikistan",
              "Tanzania": "tanzania",
              "Thailand": "thailand",
              "Timor-Leste": "timor_leste",
              "Togo": "togo",
              "Tonga": "tonga",
              "Trinidad_and_Tobago": "trinidad_and_tobago",
              "Tunisia": "tunisia",
              "Turkey": "turkey",
              "Turkmenistan": "turkmenistan",
              "Tuvalu": "tuvalu",
              "Uganda": "uganda",
              "Ukraine": "ukraine",
              "United_Arab_Emirates": "united_arab_emirates",
              "United_Kingdom": "uk",
              "United_States_of_America": "usa",
              "Uruguay": "uruguay",
              "Uzbekistan": "uzbekistan",
              "Vanuatu": "vanuatu",
              "Vatican_City": "vatican",
              "Venezuela": "venezuela",
              "Vietnam": "vietnam",
              "Yemen": "yemen",
              "Zambia": "zambia",
            }

            const ageRangeMapping = {
              "5_9yrs": "0_17_years_old_a619c9b",
              "10_14yrs": "18_59_years_old_b6fd344",
              "15_18yrs": "not_indicated_4f3457b",
              "19_25yrs": "19_25_years_old_4d4ddce",
              "26_59yrs": "26_59_years_old_04359cb",
              "60_above_yrs": "60_and_above_b0f9d41",
              "Unknown": "unknown_3e07f9e",
              "Mixed_group_of_people": "mixed_group_of_people_f34be4b"
            };

            const caseCategoryMapping = {
              "pending_categorization": "_pending_categorization__f2609f3",
              "request_info_1": "request_or_suggestion_debcecd",
              "request_info_2": "request_for_information___about_response_actors_be74193",
              "request_info_3": "request_for_information___about_information_provision_and_feedback_channels_35e1766",
              "request_info_4": "request_for_information___other_cec52c2",
              "request_assistance_1": "report_8751b89",
              "request_assistance_2": "request_for_assistance_or_services___civil_registration_and_legal_documentation_efc993f",
              "request_assistance_3": "request_for_assistance_or_services___other_9639ea2",
              "complaint_assist_activities_1": "observation__perception_or_belief_0230bfc",
              "complaint_assist_activities_2": "complaint_about_assistance_and_activities___issues_with_the_activities_or_assistance_services_provided__5b0d1fd",
              "complaint_assist_activities_3": "complaint_about_assistance_and_activities___issues_with_aid_items_11715aa",
              "complaint_assist_activities_4": "complaint_about_assistance_and_activities___other_c3d4da3",
              "complaint_behavior_1": "other_61db39d",
              "complaint_behavior_2": "complaint_about_the_behavior_of_aid_workers___allegation_of_child_marriage__similar_union_with_a_child_or_sexual_activity_with_a_child_7b260a2",
              "complaint_behavior_3": "complaint_about_the_behavior_of_aid_workers___allegation_of_harmful_practices_a7bc0bc",
              "complaint_behavior_4": "complaint_about_the_behavior_of_aid_workers___allegation_of_slave_forced_exploitative_labour_and_or_human_trafficking_c9bbb82",
              "complaint_behavior_5": "complaint_about_the_behavior_of_aid_workers___allegation_of_corruption__bribery__theft_or_fraud_a5a9862",
              "complaint_behavior_6": "complaint_about_the_behavior_of_aid_workers___allegation_of_negligence_on_professional_or_personal_capacity_cac54d9",
              "complaint_behavior_7": "complaint_about_the_behavior_of_aid_workers___allegation_of_physical_violence_or_verbal_abuse_d2854bf",
              "complaint_behavior_8": "complaint_about_the_behavior_of_aid_workers___allegation_of_harassment__including_sexual_harassment___a354c46",
              "complaint_behavior_9": "complaint_about_the_behavior_of_aid_workers___allegation_of_breach_of_duties_of_independence__neutrality__and_impartiality_7ef6b4b",
              "complaint_behavior_10": "complaint_about_the_behavior_of_aid_workers___allegation_of_less_serious_safeguarding_concerns_22ffb8a",
              "complaint_behavior_11": "complaint_about_the_behavior_of_aid_workers___allegation_of_unethical_evidence_activities_2521f33",
              "safety_security_1": "report_on_safety_or_security_issue_0ec19e4",
              "safety_security_2": "safety_and_security___missing_person_reports_991cd84",
              "safety_security_3": "safety_and_security___occupational_health_and_safety_incidents_a44e245",
              "safety_security_4": "safety_and_security___environmental_and_social_violations_and_incidents_fb29146",
              "safety_security_5": "safety_and_security___security_incidents_3693bfa",
              "safety_security_6": "safety_and_security___diversion_of_aid__dc68a2a",
              "safety_security_7": "safety_and_security___politicization_of_aid_aec953e",
              "safety_security_8": "safety_and_security___data_breaches_and_information_security_incidents_3da9b20",
              "safety_security_9": "safety_and_security___other_b4fa79a",
              "observations_suggestions_1": "observation_or_suggestion_aa54ec9",
              "observations_suggestions_2": "observations_and_suggestions___about_access_to_information_and_assistance_bc7a83b",
              "observations_suggestions_3": "observations_and_suggestions___about_community_beliefs_and_rumours_a6def10",
              "observations_suggestions_4": "observations_and_suggestions___other_773c9d9",
              "data_subject_request_1": "data_subject_request_bed8a87",
              "data_subject_request_2": "data_subject_request___information_about_the_personal_data_processing_1fd7b69",
              "data_subject_request_3": "data_subject_request___copy_of_own_personal_data_38d808c",
              "data_subject_request_4": "data_subject_request___delete_personal_data__partial_or_total___88c6d9a",
              "data_subject_request_5": "data_subject_request___correct_update_personal_data_260c6c9",
              "data_subject_request_6": "data_subject_request___limit_the_processing_of_personal_data_29b9a14",
              "data_subject_request_7": "data_subject_request___human_review_of_automated_decision_making_7182a3a",
              "issue_cfrm_1": "issue_interacting_with_the_cfrm_08dab07",
              "issue_cfrm_2": "data_subject_request____63f5862",
              "issue_cfrm_3": "issue_interacting_with_the_cfrm___abusive_malicious_feedback_providers_2c2ab65",
              "issue_cfrm_4": "issue_interacting_with_the_cfrm___cancelled_submissions_8fafbaa",
              "issue_cfrm_5": "issue_interacting_with_the_cfrm___other_f662a8e"
            };

            const programmaticAreaMapping = {
              "Pending_categorization": "local_integration_4721a6c",
              "Not_applicable": "sexual_exploitation_and_abuse__sea__c2b098e",
              "Adolescent_Development_and_Participation": "a__adolescent_development_and_participation_b19f2ba",
              "Access_and_Logistics": "logistics_f1ce006",
              "Camp_Coordination_and_Camp_Management": "camp_coordination_and_camp_management__cccm__e9d90b3",
              "Cash_Assistance_and_Social_Protection": "cash_assistance_086f72b",
              "Civil-Military_Coordination": "civil_military_coordination_87b1aca",
              "Child_Protection": "child_protection_72b4d71",
              "Disability_and_Inclusion": "disability_and_inclusion_e537ca8",
              "Early_Childhood_Development": "early_childhood_development_2c517c5",
              "Education": "education_d3bfe8f",
              "Early_Recovery": "early_recovery_c6e511c",
              "Emergency_Telecommunications": "emergency_telecommunications_ee553b2",
              "Energy_and_Environment": "energy_and_environment_fd73e2b",
              "Food_Security_and_Livelihoods": "food_security_0e10495",
              "Gender_Based_Violence": "gender_based_violence__gbv__781a991",
              "Health_and_Immunisation": "health_ee4020e",
              "Housing,_Land_and_Property": "housing__land_and_property_109da85",
              "Mental_Health_and_Psychosocial_Support": "mental_health_and_psychosocial_support__mhpss__abac8de",
              "Migrants": "migrants__registration__resettlement__rsd__repatriation__local_integration__complementary_pathways__etc___aa10d1b",
              "Mine_Action": "mine_action_f5161ba",
              "Nutrition": "nutrition_03abf98",
              "Parenting": "parenting_84b0c4c",
              "Protection": "protection_0e30687",
              "Shelter": "shelter_ae9eb74",
              "Social_and_Behaviour_Change": "social_and_behaviour_change__sbc__b64e02a",
              "WASH": "wash_d59fd40"
            };

            const locationMapping = {
              "admin1": "BIH001",
              "admin2": "BIH002",
              "admin3": "BIH003",
              "admin4": "BIH004",
              "admin5": "BIH005",
              "admin6": "BIH006",
              "admin7": "BIH007",
              "admin8": "BIH008",
              "admin9": "BIH010",
              "admin15": "BIH016",
              "admin16": "BIH009",
              "admin17": "BIH017"
            };

            const vulnerabilityMapping = {
              "None": "none_9052aa8",
              "Alcohol_drug_abuse_in_family": "alcohol__drug_abuse_in_family_0e1da79",
              "Child_headed_household": "orphan_f6104f0",
              "HIV+": "hiv__64150e2",
              "IDP_Refugee_Statelessness": "statelessness_51c7096",
              "Member_of_marginalised_group": "member_of_marginalised_group__eg__due_to_religion__ethnicity__496febf",
              "Person_with_disability": "person_with_special_needs_afa807f",
              "Pregnant_or_lactating_woman": "idp_d535e6f",
              "Unaccompanied_or_separated_children": "refugee_4fa85ce",
              "Mixed_group_of_people": "mixed_group_of_people_e7aa51f"
            };

            const languageMapping = {
              "Language1": "language1",
              "Language2": "language4",
              "Language3": "language5",
              "Language4": "language6",
              "Language5": "language2",
              "Language6": "language7",
              "Other": "language8"
            };

            const consentFromMapping = {
              "Individual": "individual__self_reporting__e45b925",
              "Caregiver": "caregiver__legal_guardian__4df2a59",
              "Social_worker": "social_worker_0cd94f9",
              "Teacher": "teacher_99ba24d",
              "Other": "other_5b3b632"
            };

            const formatPreferredChannelOfCommunication = (text) => {
              if (text === null || text === undefined) {
                return '';
              }
              return text.replace(/_/g, ' ');
            };

            const checkDisclosure = (disclosure) => {
              if (disclosure) {
                return disclosure === "OK";
              }
              return false;
            };

            const formatRegistrationDate = (date) => {
              const parsedDate = dateFns.parse(date, "dd-MMM-yyyy", new Date());

              return dateFns.format(parsedDate, "yyyy-MM-dd");
            }

            //Perform input data mapping
            state.mappedData = {
              registration_date: formatRegistrationDate(state.data.registration_date),
              sex: genderMapping[state.data.sex],
              age_range_3df3bdb: ageRangeMapping[state.data.age_range],
              protection_status: caseCategoryMapping[state.data.case_category_80a3d81],
              protection_concerns:   (state.data.programmatic_area || "")
                .split(" ")
                .map(factor => programmaticAreaMapping[factor])
                .filter(Boolean),
              location_current: locationMapping[state.data.location],
              diversity_factor_s__98eb91b: (state.data.vulnerability_factor || "")
                .split(" ")
                .map(factor => vulnerabilityMapping[factor])
                .filter(Boolean),
              nationality: [nationalityMapping[state.data.nationality]],
              preferred_channel_of_communication_f25a28d: formatPreferredChannelOfCommunication(state.data.preferred_channel_of_communication),
              disclosure_other_orgs: checkDisclosure(state.data.disclosure_other_orgs),
              language: [languageMapping[state.data.language]],
              consent_assent_obtained_from_c4a5c9e: (state.data.consent || "")
                .split(" ")
                .map(factor => consentFromMapping[factor])
                .filter(Boolean)
            }

            return state;

          });

      Register-feedback-in-Primero:
        name: Register feedback in Primero
        adaptor: '@openfn/language-primero@3.1.0'
        credential: null
        body: |
          // //Create/Update case to be sent to primero
          fn(state => {
            state.attachments = state.data['_attachments'];
            return state
          })

          upsertCase({
            externalIds: ["case_id"],
            data: state => ({
              case_id: state.data._uuid,
              registration_date: state.mappedData.registration_date,
              location_current: state.mappedData.location_current, 
              feedback_comment_f076498: state.data.feedback_comment,
              sex: state.mappedData.sex,
              name_first: state.data.name_first,
              name_last: state.data.name_last,
              age_range_3df3bdb: state.mappedData.age_range_3df3bdb,
              disclosure_other_orgs: state.mappedData.disclosure_other_orgs, 
              date_of_birth: state.data.date_of_birth,
              nationality: state.mappedData.nationality,
              preferred_channel_of_communication_f25a28d: state.mappedData.preferred_channel_of_communication_f25a28d, 
              protection_status: state.mappedData.protection_status,
              protection_concerns: state.mappedData.protection_concerns,
              telephone_current: state.data.channel_of_communication_phonenumber,
              email_b3fb5e0: state.data.channel_of_communication_email,
              address_current: state.data.channel_of_communication_physical_address,
              language: state.mappedData.language,
              consent_assent_obtained_from_c4a5c9e: state.mappedData.consent_assent_obtained_from_c4a5c9e,
              consent_source_other: state.data.consent_other,
              immediate_actions_taken_in_response_to_the_feedback_received_ecd46ba: state.data.immediate_actions,
              other_language_of_interaction_00ed07f: state.data.language_comment,
              diversity_factor_s__98eb91b: state.mappedData.diversity_factor_s__98eb91b,
              feedback_channel_eba5764: 'mobile_teams__field_staff__monitors_afdfc51',
              module_id: "primeromodule-cp",
            }),
          });

      Get-attachment-From-Inform:
        name: Get attachment From Inform
        adaptor: '@openfn/language-inform@1.0.1'
        credential: null
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          fn(state =>{
            state.primeroCaseId = state.data.id;
            return state
          })

          downloadAttachment($.attachments[0].id, {
          filename: $.attachments[0].filename,
          parseAs: 'base64',
          });

      Upload-attachment-to-Primero:
        name: Upload attachment to Primero
        adaptor: '@openfn/language-primero@3.1.0'
        credential: null
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          fn(async (state) => {
            const attachments = state.attachments[0]; 
            const imageEncodedString = state.data; 

            delete state.data; 

            state.data = {
              attachment: imageEncodedString,
              attachment_type: "image",         
              content_type: attachments.mimetype,
              date: new Date().toISOString(),
              field_name: "photos",            
              file_name: attachments.name,
              is_current: false
            };

            return state;
          });


          http.post(`cases/${$.primeroCaseId}/attachments`, $.data)

    triggers:
      webhook:
        type: webhook
        enabled: true
    edges:
      webhook->Transform-and-Map-data:
        source_trigger: webhook
        target_job: Transform-and-Map-data
        condition_type: always
        enabled: true
      Transform-and-Map-data->Register-feedback-in-Primero:
        source_job: Transform-and-Map-data
        target_job: Register-feedback-in-Primero
        condition_type: on_job_success
        enabled: true
      Register-feedback-in-Primero->Get-attachment-From-Inform:
        source_job: Register-feedback-in-Primero
        target_job: Get-attachment-From-Inform
        condition_type: js_expression
        condition_label: Attachment Exists
        condition_expression: |
          state.data.id && state.attachments && state.attachments?.length > 0

        enabled: true
      Get-attachment-From-Inform->Upload-attachment-to-Primero:
        source_job: Get-attachment-From-Inform
        target_job: Upload-attachment-to-Primero
        condition_type: on_job_success
        enabled: true
  inform-to-unicare-turkey-demo:
    name: inform-to-unicare-turkey-demo
    jobs:
      Transform-and-Map-data:
        name: Transform and Map data
        adaptor: '@openfn/language-common@2.3.1'
        credential: null
        body: |
          fn(state => {
            console.log('Preparing and cleaning case data...');
            //Prepare mapping constants between inform and primero
            const genderMapping = {
              "Male": "male",
              "Female": "female",
              "Non_binary": "other",
              "Prefer_not_to_say": "preferred_not_to_indicate_37248fa",
              "Mixed_group_of_people": "mixed_group_of_people_529e88d"
            };

            const nationalityMapping = {
              "Afghanistan": "afghanistan",
              "Albania": "albania",
              "Algeria": "algeria",
              "Andorra": "andorra",
              "Angola": "angola",
              "Antigua_and_Barbuda": "antigua_and_barbuda",
              "Argentina": "argentina",
              "Armenia": "armenia",
              "Australia": "australia",
              "Austria": "austria",
              "Azerbaijan": "azerbaijan",
              "Bahamas": "bahamas",
              "Bahrain": "bahrain",
              "Bangladesh": "bangladesh",
              "Barbados": "barbados",
              "Belarus": "belarus",
              "Belgium": "belgium",
              "Belize": "belize",
              "Benin": "benin",
              "Bhutan": "bhutan",
              "Bolivia": "bolivia",
              "Bosnia_and_Herzegovina": "bosnia_and_herzegovina",
              "Botswana": "botswana",
              "Brazil": "brazil",
              "Brunei": "brunei",
              "Bulgaria": "bulgaria",
              "Burkina Faso": "burkina_faso",
              "Burundi": "burundi",
              "Cabo Verde": "cabo_verde",
              "Cambodia": "cambodia",
              "Cameroon": "cameroon",
              "Canada": "canada",
              "Central_African_Republic": "central_african_republic",
              "Chad": "chad",
              "Chile": "chile",
              "China": "china",
              "Colombia": "colombia",
              "Comoros": "comoros",
              "Congo-Brazzaville": "congo",
              "Democratic_Republic_of_the_Congo": "drc",
              "Costa_Rica": "costa_rica",
              "Cote_d'Ivoire": "cote_divoire",
              "Croatia": "croatia",
              "Cuba": "cuba",
              "Cyprus": "cyprus",
              "Czechia": "czech_republic",
              "Denmark": "denmark",
              "Djibouti": "djibouti",
              "Dominica": "dominica",
              "Dominican_Republic": "dominican_republic",
              "Ecuador": "ecuador",
              "Egypt": "egypt",
              "El_Salvador": "el_salvador",
              "Equatorial_Guinea": "equatorial_guinea",
              "Eritrea": "eritrea",
              "Estonia": "estonia",
              "Ethiopia": "ethiopia",
              "Fiji": "fiji",
              "Finland": "finland",
              "France": "france",
              "Gabon": "gabon",
              "Gambia": "gambia",
              "Georgia": "georgia",
              "Germany": "germany",
              "Ghana": "ghana",
              "Greece": "greece",
              "Grenada": "grenada",
              "Guatemala": "guatemala",
              "Guinea": "guinea",
              "Guinea_Bissau": "guinea_bissau",
              "Guyana": "guyana",
              "Haiti": "haiti",
              "Honduras": "honduras",
              "Hungary": "hungary",
              "Iceland": "iceland",
              "India": "india",
              "Indonesia": "indonesia",
              "Iran": "iran",
              "Iraq": "iraq",
              "Ireland": "ireland",
              "Israel": "israel",
              "Italy": "italy",
              "Jamaica": "jamaica",
              "Japan": "japan",
              "Jordan": "jordan",
              "Kazakhstan": "kazakhstan",
              "Kenya": "kenya",
              "Kiribati": "kiribati",
              "Kosovo": "kosovo",
              "Kuwait": "kuwait",
              "Kyrgyzstan": "kyrgyzstan",
              "Laos": "laos",
              "Latvia": "latvia",
              "Lebanon": "lebanon",
              "Lesotho": "lesotho",
              "Liberia": "liberia",
              "Libya": "libya",
              "Liechtenstein": "liechtenstein",
              "Lithuania": "lithuania",
              "Luxembourg": "luxembourg",
              "Macedonia": "macedonia",
              "Madagascar": "madagascar",
              "Malawi": "malawi",
              "Malaysia": "malaysia",
              "Maldives": "maldives",
              "Mali": "mali",
              "Malta": "malta",
              "Marshall_Islands": "marshall_islands",
              "Mauritania": "mauritania",
              "Mauritius": "mauritius",
              "Mexico": "mexico",
              "Micronesia": "micronesia",
              "Moldova": "moldova",
              "Monaco": "monaco",
              "Mongolia": "mongolia",
              "Montenegro": "montenegro",
              "Morocco": "morocco",
              "Mozambique": "mozambique",
              "Myanmar": "myanmar",
              "Namibia": "namibia",
              "Nauru": "nauru",
              "Nepal": "nepal",
              "Netherlands": "netherlands",
              "New_Zealand": "new_zealand",
              "Nicaragua": "nicaragua",
              "Niger": "niger",
              "Nigeria": "nigeria",
              "North_Korea": "north_korea",
              "Norway": "norway",
              "Oman": "oman",
              "Pakistan": "pakistan",
              "Palau": "palau",
              "Palestine_State": "palestine",
              "Panama": "panama",
              "Papua_New_Guinea": "papua_new_guinea",
              "Paraguay": "paraguay",
              "Peru": "peru",
              "Philippines": "philippines",
              "Poland": "poland",
              "Portugal": "portugal",
              "Qatar": "qatar",
              "Romania": "romania",
              "Russia": "russia",
              "Rwanda": "rwanda",
              "Saint_Kitts_and_Nevis": "st_kitts_and_nevis",
              "Saint_Lucia": "st_lucia",
              "Saint_Vincent_and_the_Grenadines": "st_vincent_and_the_grenadines",
              "Samoa": "samoa",
              "San_Marino": "san_marino",
              "Sao_Tome_and_Principe": "sao_tome_and_principe",
              "Saudi_Arabia": "saudi_arabia",
              "Senegal": "senegal",
              "Serbia": "serbia",
              "Seychelles": "seychelles",
              "Sierra_Leone": "sierra_leone",
              "Singapore": "singapore",
              "Slovakia": "slovakia",
              "Slovenia": "slovenia",
              "Solomon_Islands": "solomon_islands",
              "Somalia": "somalia",
              "South_Africa": "south_africa",
              "South_Korea": "south_korea",
              "South_Sudan": "south_sudan",
              "Spain": "spain",
              "Sri_Lanka": "sri_lanka",
              "Sudan": "sudan",
              "Suriname": "suriname",
              "Swaziland": "swaziland",
              "Sweden": "sweden",
              "Switzerland": "switzerland",
              "Syria": "syria",
              "Taiwan": "taiwan",
              "Tajikistan": "tajikistan",
              "Tanzania": "tanzania",
              "Thailand": "thailand",
              "Timor-Leste": "timor_leste",
              "Togo": "togo",
              "Tonga": "tonga",
              "Trinidad_and_Tobago": "trinidad_and_tobago",
              "Tunisia": "tunisia",
              "Turkey": "turkey",
              "Turkmenistan": "turkmenistan",
              "Tuvalu": "tuvalu",
              "Uganda": "uganda",
              "Ukraine": "ukraine",
              "United_Arab_Emirates": "united_arab_emirates",
              "United_Kingdom": "uk",
              "United_States_of_America": "usa",
              "Uruguay": "uruguay",
              "Uzbekistan": "uzbekistan",
              "Vanuatu": "vanuatu",
              "Vatican_City": "vatican",
              "Venezuela": "venezuela",
              "Vietnam": "vietnam",
              "Yemen": "yemen",
              "Zambia": "zambia",
            }

            const ageRangeMapping = {
              "5_9yrs": "0_17_years_old_a619c9b",
              "10_14yrs": "18_59_years_old_b6fd344",
              "15_17yrs": "not_indicated_4f3457b",
              "18_24yrs": "19_25_years_old_4d4ddce",
              "25_59yrs": "26_59_years_old_04359cb",
              "60_above_yrs": "60_and_above_b0f9d41",
              "Unknown": "unknown_3e07f9e",
              "Mixed_group_of_people": "mixed_group_of_people_f34be4b"
            };

            const caseCategoryMapping = {
              "pending_categorization": "_pending_categorization__f2609f3",
              "request_info_1": "request_or_suggestion_debcecd",
              "request_info_2": "request_for_information___about_response_actors_be74193",
              "request_info_3": "request_for_information___about_information_provision_and_feedback_channels_35e1766",
              "request_info_4": "request_for_information___other_cec52c2",
              "request_assistance_1": "report_8751b89",
              "request_assistance_2": "request_for_assistance_or_services___civil_registration_and_legal_documentation_efc993f",
              "request_assistance_3": "request_for_assistance_or_services___other_9639ea2",
              "complaint_assist_activities_1": "observation__perception_or_belief_0230bfc",
              "complaint_assist_activities_2": "complaint_about_assistance_and_activities___issues_with_the_activities_or_assistance_services_provided__5b0d1fd",
              "complaint_assist_activities_3": "complaint_about_assistance_and_activities___issues_with_aid_items_11715aa",
              "complaint_assist_activities_4": "complaint_about_assistance_and_activities___other_c3d4da3",
              "complaint_behavior_1": "other_61db39d",
              "complaint_behavior_2": "complaint_about_the_behavior_of_aid_workers___allegation_of_child_marriage__similar_union_with_a_child_or_sexual_activity_with_a_child_7b260a2",
              "complaint_behavior_3": "complaint_about_the_behavior_of_aid_workers___allegation_of_harmful_practices_a7bc0bc",
              "complaint_behavior_4": "complaint_about_the_behavior_of_aid_workers___allegation_of_slave_forced_exploitative_labour_and_or_human_trafficking_c9bbb82",
              "complaint_behavior_5": "complaint_about_the_behavior_of_aid_workers___allegation_of_corruption__bribery__theft_or_fraud_a5a9862",
              "complaint_behavior_6": "complaint_about_the_behavior_of_aid_workers___allegation_of_negligence_on_professional_or_personal_capacity_cac54d9",
              "complaint_behavior_7": "complaint_about_the_behavior_of_aid_workers___allegation_of_physical_violence_or_verbal_abuse_d2854bf",
              "complaint_behavior_8": "complaint_about_the_behavior_of_aid_workers___allegation_of_harassment__including_sexual_harassment___a354c46",
              "complaint_behavior_9": "complaint_about_the_behavior_of_aid_workers___allegation_of_breach_of_duties_of_independence__neutrality__and_impartiality_7ef6b4b",
              "complaint_behavior_10": "complaint_about_the_behavior_of_aid_workers___allegation_of_less_serious_safeguarding_concerns_22ffb8a",
              "complaint_behavior_11": "complaint_about_the_behavior_of_aid_workers___allegation_of_unethical_evidence_activities_2521f33",
              "safety_security_1": "report_on_safety_or_security_issue_0ec19e4",
              "safety_security_2": "safety_and_security___missing_person_reports_991cd84",
              "safety_security_3": "safety_and_security___occupational_health_and_safety_incidents_a44e245",
              "safety_security_4": "safety_and_security___environmental_and_social_violations_and_incidents_fb29146",
              "safety_security_5": "safety_and_security___security_incidents_3693bfa",
              "safety_security_6": "safety_and_security___diversion_of_aid__dc68a2a",
              "safety_security_7": "safety_and_security___politicization_of_aid_aec953e",
              "safety_security_8": "safety_and_security___data_breaches_and_information_security_incidents_3da9b20",
              "safety_security_9": "safety_and_security___other_b4fa79a",
              "observations_suggestions_1": "observation_or_suggestion_aa54ec9",
              "observations_suggestions_2": "observations_and_suggestions___about_access_to_information_and_assistance_bc7a83b",
              "observations_suggestions_3": "observations_and_suggestions___about_community_beliefs_and_rumours_a6def10",
              "observations_suggestions_4": "observations_and_suggestions___other_773c9d9",
              "data_subject_request_1": "data_subject_request_bed8a87",
              "data_subject_request_2": "data_subject_request___information_about_the_personal_data_processing_1fd7b69",
              "data_subject_request_3": "data_subject_request___copy_of_own_personal_data_38d808c",
              "data_subject_request_4": "data_subject_request___delete_personal_data__partial_or_total___88c6d9a",
              "data_subject_request_5": "data_subject_request___correct_update_personal_data_260c6c9",
              "data_subject_request_6": "data_subject_request___limit_the_processing_of_personal_data_29b9a14",
              "data_subject_request_7": "data_subject_request___human_review_of_automated_decision_making_7182a3a",
              "issue_cfrm_1": "issue_interacting_with_the_cfrm_08dab07",
              "issue_cfrm_2": "data_subject_request____63f5862",
              "issue_cfrm_3": "issue_interacting_with_the_cfrm___abusive_malicious_feedback_providers_2c2ab65",
              "issue_cfrm_4": "issue_interacting_with_the_cfrm___cancelled_submissions_8fafbaa",
              "issue_cfrm_5": "issue_interacting_with_the_cfrm___other_f662a8e"
            };

            const programmaticAreaMapping = {
              "Pending_categorization": "local_integration_4721a6c",
              "Not_applicable": "sexual_exploitation_and_abuse__sea__c2b098e",
              "Adolescent_Development_and_Participation": "a__adolescent_development_and_participation_b19f2ba",
              "Access_and_Logistics": "logistics_f1ce006",
              "Camp_Coordination_and_Camp_Management": "camp_coordination_and_camp_management__cccm__e9d90b3",
              "Cash_Assistance_and_Social_Protection": "cash_assistance_086f72b",
              "Civil-Military_Coordination": "civil_military_coordination_87b1aca",
              "Child_Protection": "child_protection_72b4d71",
              "Disability_and_Inclusion": "disability_and_inclusion_e537ca8",
              "Early_Childhood_Development": "early_childhood_development_2c517c5",
              "Education": "education_d3bfe8f",
              "Early_Recovery": "early_recovery_c6e511c",
              "Emergency_Telecommunications": "emergency_telecommunications_ee553b2",
              "Energy_and_Environment": "energy_and_environment_fd73e2b",
              "Food_Security_and_Livelihoods": "food_security_0e10495",
              "Gender_Based_Violence": "gender_based_violence__gbv__781a991",
              "Health_and_Immunisation": "health_ee4020e",
              "Housing,_Land_and_Property": "housing__land_and_property_109da85",
              "Mental_Health_and_Psychosocial_Support": "mental_health_and_psychosocial_support__mhpss__abac8de",
              "Migrants": "migrants__registration__resettlement__rsd__repatriation__local_integration__complementary_pathways__etc___aa10d1b",
              "Mine_Action": "mine_action_f5161ba",
              "Nutrition": "nutrition_03abf98",
              "Parenting": "parenting_84b0c4c",
              "Protection": "protection_0e30687",
              "Shelter": "shelter_ae9eb74",
              "Social_and_Behaviour_Change": "social_and_behaviour_change__sbc__b64e02a",
              "WASH": "wash_d59fd40"
            };

            const locationMapping = {
              "1": "TUR001",
              "2": "TUR002",
              "3": "TUR003",
              "4": "TUR004",
              "68": "TUR068",
              "5": "TUR005",
              "6": "TUR006",
              "7": "TUR007",
              "75": "TUR075",
              "8": "TUR008",
              "9": "TUR009",
              "10": "TUR010",
              "74": "TUR074",
              "72": "TUR072",
              "69": "TUR069",
              "11": "TUR011",
              "12": "TUR012",
              "13": "TUR013",
              "14": "TUR014",
              "15": "TUR015",
              "16": "TUR016",
              "17": "TUR017",
              "18": "TUR018",
              "19": "TUR019",
              "20": "TUR020",
              "21": "TUR021",
              "81": "TUR081",
              "22": "TUR022",
              "23": "TUR023",
              "24": "TUR024",
              "25": "TUR025",
              "26": "TUR026",
              "27": "TUR027",
              "28": "TUR028",
              "29": "TUR029",
              "30": "TUR030",
              "31": "TUR031",
              "76": "TUR076",
              "32": "TUR032",
              "34": "TUR034",
              "35": "TUR035",
              "46": "TUR046",
              "78": "TUR078",
              "70": "TUR070",
              "36": "TUR036",
              "37": "TUR037",
              "38": "TUR038",
              "79": "TUR079",
              "71": "TUR071",
              "39": "TUR039",
              "40": "TUR040",
              "41": "TUR041",
              "42": "TUR042",
              "43": "TUR043",
              "44": "TUR044",
              "45": "TUR045",
              "47": "TUR047",
              "33": "TUR033",
              "48": "TUR048",
              "49": "TUR049",
              "50": "TUR050",
              "51": "TUR051",
              "52": "TUR052",
              "80": "TUR080",
              "53": "TUR053",
              "54": "TUR054",
              "55": "TUR055",
              "63": "TUR063",
              "56": "TUR056",
              "57": "TUR057",
              "73": "TUR073",
              "58": "TUR058",
              "59": "TUR059",
              "60": "TUR060",
              "61": "TUR061",
              "62": "TUR062",
              "64": "TUR064",
              "65": "TUR065",
              "77": "TUR077",
              "66": "TUR066",
              "67": "TUR067"
          };

            const vulnerabilityMapping = {
              "None": "none_9052aa8",
              "Alcohol_drug_abuse_in_family": "alcohol__drug_abuse_in_family_0e1da79",
              "Child_headed_household": "orphan_f6104f0",
              "HIV+": "hiv__64150e2",
              "IDP_Refugee_Statelessness": "statelessness_51c7096",
              "Member_of_marginalised_group": "member_of_marginalised_group__eg__due_to_religion__ethnicity__496febf",
              "Person_with_disability": "person_with_special_needs_afa807f",
              "Pregnant_or_lactating_woman": "idp_d535e6f",
              "Unaccompanied_or_separated_children": "refugee_4fa85ce",
              "Mixed_group_of_people": "mixed_group_of_people_e7aa51f"
            };

            const languageMapping = {
              "Language1": "language1",
              "Language2": "language4",
              "Language3": "language5",
              "Language4": "language6",
              "Language5": "language2",
              "Language6": "language7",
              "Other": "language8"
            };

            const consentFromMapping = {
              "Individual": "individual__self_reporting__e45b925",
              "Caregiver": "caregiver__legal_guardian__4df2a59",
              "Social_worker": "social_worker_0cd94f9",
              "Teacher": "teacher_99ba24d",
              "Other": "other_5b3b632"
            };

            const formatPreferredChannelOfCommunication = (text) => {
              if (text === null || text === undefined) {
                return '';
              }
              return text.replace(/_/g, ' ');
            };

            const checkDisclosure = (disclosure) => {
              if (disclosure) {
                return disclosure === "OK";
              }
              return false;
            };

            const formatRegistrationDate = (date) => {
              const parsedDate = dateFns.parse(date, "dd-MMM-yyyy", new Date());

              return dateFns.format(parsedDate, "yyyy-MM-dd");
            }

            //Perform input data mapping
            state.mappedData = {
              registration_date: formatRegistrationDate(state.data.registration_date),
              sex: genderMapping[state.data.sex],
              age_range_3df3bdb: ageRangeMapping[state.data.age_range],
              protection_status: caseCategoryMapping[state.data.case_category_80a3d81],
              protection_concerns:  (state.data.programmatic_area || "")
                .split(" ")
                .map(factor => programmaticAreaMapping[factor])
                .filter(Boolean),
              location_current: locationMapping[state.data.location],
              diversity_factor_s__98eb91b: (state.data.vulnerability_factor || "")
                .split(" ")
                .map(factor => vulnerabilityMapping[factor])
                .filter(Boolean),
              nationality: [nationalityMapping[state.data.nationality]],
              preferred_channel_of_communication_f25a28d: formatPreferredChannelOfCommunication(state.data.preferred_channel_of_communication),
              disclosure_other_orgs: checkDisclosure(state.data.disclosure_other_orgs),
              language: [languageMapping[state.data.language]],
              consent_assent_obtained_from_c4a5c9e: (state.data.consent || "")
                .split(" ")
                .map(factor => consentFromMapping[factor])
                .filter(Boolean)
            }

            return state;

          });

      Register-feedback-in-Primero:
        name: Register feedback in Primero
        adaptor: '@openfn/language-primero@3.1.0'
        credential: aleksa@openfn.org-Unicare-Turkey-Primero-Demo
        body: |
          // //Create/Update case to be sent to primero
          fn(state => {
            state.attachments = state.data['attachments'];
            return state
          })

          upsertCase({
            externalIds: ["case_id"],
            data: state => ({
              case_id: state.data._uuid,
              registration_date: state.mappedData.registration_date,
              location_current: state.mappedData.location_current, 
              feedback_comment_f076498: state.data.feedback_comment,
              sex: state.mappedData.sex,
              name_first: state.data.name_first,
              name_last: state.data.name_last,
              age_range_3df3bdb: state.mappedData.age_range_3df3bdb,
              disclosure_other_orgs: state.mappedData.disclosure_other_orgs, 
              date_of_birth: state.data.date_of_birth,
              nationality: state.mappedData.nationality,
              preferred_channel_of_communication_f25a28d: state.mappedData.preferred_channel_of_communication_f25a28d, 
              protection_status: state.mappedData.protection_status,
              protection_concerns: state.mappedData.protection_concerns,
              telephone_current: state.data.channel_of_communication_phonenumber,
              email_b3fb5e0: state.data.channel_of_communication_email,
              address_current: state.data.channel_of_communication_physical_address,
              language: state.mappedData.language,
              consent_assent_obtained_from_c4a5c9e: state.mappedData.consent_assent_obtained_from_c4a5c9e,
              consent_source_other: state.data.consent_other,
              immediate_actions_taken_in_response_to_the_feedback_received_ecd46ba: state.data.immediate_actions,
              other_language_of_interaction_00ed07f: state.data.language_comment,
              diversity_factor_s__98eb91b: state.mappedData.diversity_factor_s__98eb91b,
              feedback_channel_eba5764: 'mobile_teams__field_staff__monitors_afdfc51',
              module_id: "primeromodule-cp",
            }),
          });

      Get-attachment-From-Inform:
        name: Get attachment From Inform
        adaptor: '@openfn/language-inform@1.0.1'
        credential: aleksa@openfn.org-Unicef-Inform
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          fn(state =>{
            state.primeroCaseId = state.data.id;
            const formId = state.references[0]._xform_id;
            const submissionId = state.references[0]._id;
            return { ...state, formId, submissionId };
          })

          getSubmission($.formId, $.submissionId);

          fn(state =>{
            state.attachments = state.data._attachments;
            return state;
          })

          fnIf($.attachments[0].id,
            downloadAttachment($.attachments[0].id, {
            filename: $.attachments[0].filename,
            parseAs: 'base64',
          })
          );

      Upload-attachment-to-Primero:
        name: Upload attachment to Primero
        adaptor: '@openfn/language-primero@3.1.0'
        credential: aleksa@openfn.org-Unicare-Turkey-Primero-Demo
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          fn(async (state) => {
            const attachments = state.attachments[0]; 
            const imageEncodedString = state.data; 

            delete state.data; 

            state.data = {
              attachment: imageEncodedString,
              attachment_type: "image",         
              content_type: attachments.mimetype,
              date: new Date().toISOString(),
              field_name: "photos",            
              file_name: attachments.name,
              is_current: false
            };

            return state;
          });


          http.post(`cases/${$.primeroCaseId}/attachments`, $.data)

    triggers:
      webhook:
        type: webhook
        enabled: true
    edges:
      webhook->Transform-and-Map-data:
        source_trigger: webhook
        target_job: Transform-and-Map-data
        condition_type: always
        enabled: true
      Transform-and-Map-data->Register-feedback-in-Primero:
        source_job: Transform-and-Map-data
        target_job: Register-feedback-in-Primero
        condition_type: on_job_success
        enabled: true
      Register-feedback-in-Primero->Get-attachment-From-Inform:
        source_job: Register-feedback-in-Primero
        target_job: Get-attachment-From-Inform
        condition_type: js_expression
        condition_label: Attachment Exists
        condition_expression: |
          state.data.id && state.attachments && state.attachments != null

        enabled: true
      Get-attachment-From-Inform->Upload-attachment-to-Primero:
        source_job: Get-attachment-From-Inform
        target_job: Upload-attachment-to-Primero
        condition_type: on_job_success
        enabled: true
  inform-to-unicare-turkey-prod:
    name: inform-to-unicare-turkey-prod
    jobs:
      Transform-and-Map-data:
        name: Transform and Map data
        adaptor: '@openfn/language-common@2.3.1'
        credential: null
        body: |
          fn(state => {
            console.log('Preparing and cleaning case data...');
            //Prepare mapping constants between inform and primero
            const genderMapping = {
              "Male": "male",
              "Female": "female",
              "Non_binary": "other",
              "Prefer_not_to_say": "preferred_not_to_indicate_37248fa",
              "Mixed_group_of_people": "mixed_group_of_people_529e88d"
            };

            const nationalityMapping = {
              "Afghanistan": "afghanistan",
              "Albania": "albania",
              "Algeria": "algeria",
              "Andorra": "andorra",
              "Angola": "angola",
              "Antigua_and_Barbuda": "antigua_and_barbuda",
              "Argentina": "argentina",
              "Armenia": "armenia",
              "Australia": "australia",
              "Austria": "austria",
              "Azerbaijan": "azerbaijan",
              "Bahamas": "bahamas",
              "Bahrain": "bahrain",
              "Bangladesh": "bangladesh",
              "Barbados": "barbados",
              "Belarus": "belarus",
              "Belgium": "belgium",
              "Belize": "belize",
              "Benin": "benin",
              "Bhutan": "bhutan",
              "Bolivia": "bolivia",
              "Bosnia_and_Herzegovina": "bosnia_and_herzegovina",
              "Botswana": "botswana",
              "Brazil": "brazil",
              "Brunei": "brunei",
              "Bulgaria": "bulgaria",
              "Burkina Faso": "burkina_faso",
              "Burundi": "burundi",
              "Cabo Verde": "cabo_verde",
              "Cambodia": "cambodia",
              "Cameroon": "cameroon",
              "Canada": "canada",
              "Central_African_Republic": "central_african_republic",
              "Chad": "chad",
              "Chile": "chile",
              "China": "china",
              "Colombia": "colombia",
              "Comoros": "comoros",
              "Congo-Brazzaville": "congo",
              "Democratic_Republic_of_the_Congo": "drc",
              "Costa_Rica": "costa_rica",
              "Cote_d'Ivoire": "cote_divoire",
              "Croatia": "croatia",
              "Cuba": "cuba",
              "Cyprus": "cyprus",
              "Czechia": "czech_republic",
              "Denmark": "denmark",
              "Djibouti": "djibouti",
              "Dominica": "dominica",
              "Dominican_Republic": "dominican_republic",
              "Ecuador": "ecuador",
              "Egypt": "egypt",
              "El_Salvador": "el_salvador",
              "Equatorial_Guinea": "equatorial_guinea",
              "Eritrea": "eritrea",
              "Estonia": "estonia",
              "Ethiopia": "ethiopia",
              "Fiji": "fiji",
              "Finland": "finland",
              "France": "france",
              "Gabon": "gabon",
              "Gambia": "gambia",
              "Georgia": "georgia",
              "Germany": "germany",
              "Ghana": "ghana",
              "Greece": "greece",
              "Grenada": "grenada",
              "Guatemala": "guatemala",
              "Guinea": "guinea",
              "Guinea_Bissau": "guinea_bissau",
              "Guyana": "guyana",
              "Haiti": "haiti",
              "Honduras": "honduras",
              "Hungary": "hungary",
              "Iceland": "iceland",
              "India": "india",
              "Indonesia": "indonesia",
              "Iran": "iran",
              "Iraq": "iraq",
              "Ireland": "ireland",
              "Israel": "israel",
              "Italy": "italy",
              "Jamaica": "jamaica",
              "Japan": "japan",
              "Jordan": "jordan",
              "Kazakhstan": "kazakhstan",
              "Kenya": "kenya",
              "Kiribati": "kiribati",
              "Kosovo": "kosovo",
              "Kuwait": "kuwait",
              "Kyrgyzstan": "kyrgyzstan",
              "Laos": "laos",
              "Latvia": "latvia",
              "Lebanon": "lebanon",
              "Lesotho": "lesotho",
              "Liberia": "liberia",
              "Libya": "libya",
              "Liechtenstein": "liechtenstein",
              "Lithuania": "lithuania",
              "Luxembourg": "luxembourg",
              "Macedonia": "macedonia",
              "Madagascar": "madagascar",
              "Malawi": "malawi",
              "Malaysia": "malaysia",
              "Maldives": "maldives",
              "Mali": "mali",
              "Malta": "malta",
              "Marshall_Islands": "marshall_islands",
              "Mauritania": "mauritania",
              "Mauritius": "mauritius",
              "Mexico": "mexico",
              "Micronesia": "micronesia",
              "Moldova": "moldova",
              "Monaco": "monaco",
              "Mongolia": "mongolia",
              "Montenegro": "montenegro",
              "Morocco": "morocco",
              "Mozambique": "mozambique",
              "Myanmar": "myanmar",
              "Namibia": "namibia",
              "Nauru": "nauru",
              "Nepal": "nepal",
              "Netherlands": "netherlands",
              "New_Zealand": "new_zealand",
              "Nicaragua": "nicaragua",
              "Niger": "niger",
              "Nigeria": "nigeria",
              "North_Korea": "north_korea",
              "Norway": "norway",
              "Oman": "oman",
              "Pakistan": "pakistan",
              "Palau": "palau",
              "Palestine_State": "palestine",
              "Panama": "panama",
              "Papua_New_Guinea": "papua_new_guinea",
              "Paraguay": "paraguay",
              "Peru": "peru",
              "Philippines": "philippines",
              "Poland": "poland",
              "Portugal": "portugal",
              "Qatar": "qatar",
              "Romania": "romania",
              "Russia": "russia",
              "Rwanda": "rwanda",
              "Saint_Kitts_and_Nevis": "st_kitts_and_nevis",
              "Saint_Lucia": "st_lucia",
              "Saint_Vincent_and_the_Grenadines": "st_vincent_and_the_grenadines",
              "Samoa": "samoa",
              "San_Marino": "san_marino",
              "Sao_Tome_and_Principe": "sao_tome_and_principe",
              "Saudi_Arabia": "saudi_arabia",
              "Senegal": "senegal",
              "Serbia": "serbia",
              "Seychelles": "seychelles",
              "Sierra_Leone": "sierra_leone",
              "Singapore": "singapore",
              "Slovakia": "slovakia",
              "Slovenia": "slovenia",
              "Solomon_Islands": "solomon_islands",
              "Somalia": "somalia",
              "South_Africa": "south_africa",
              "South_Korea": "south_korea",
              "South_Sudan": "south_sudan",
              "Spain": "spain",
              "Sri_Lanka": "sri_lanka",
              "Sudan": "sudan",
              "Suriname": "suriname",
              "Swaziland": "swaziland",
              "Sweden": "sweden",
              "Switzerland": "switzerland",
              "Syria": "syria",
              "Taiwan": "taiwan",
              "Tajikistan": "tajikistan",
              "Tanzania": "tanzania",
              "Thailand": "thailand",
              "Timor-Leste": "timor_leste",
              "Togo": "togo",
              "Tonga": "tonga",
              "Trinidad_and_Tobago": "trinidad_and_tobago",
              "Tunisia": "tunisia",
              "Turkey": "turkey",
              "Turkmenistan": "turkmenistan",
              "Tuvalu": "tuvalu",
              "Uganda": "uganda",
              "Ukraine": "ukraine",
              "United_Arab_Emirates": "united_arab_emirates",
              "United_Kingdom": "uk",
              "United_States_of_America": "usa",
              "Uruguay": "uruguay",
              "Uzbekistan": "uzbekistan",
              "Vanuatu": "vanuatu",
              "Vatican_City": "vatican",
              "Venezuela": "venezuela",
              "Vietnam": "vietnam",
              "Yemen": "yemen",
              "Zambia": "zambia",
            }

            const ageRangeMapping = {
              "5_9yrs": "0_17_years_old_a619c9b",
              "10_14yrs": "18_59_years_old_b6fd344",
              "15_17yrs": "not_indicated_4f3457b",
              "18_24yrs": "19_25_years_old_4d4ddce",
              "25_59yrs": "26_59_years_old_04359cb",
              "60_above_yrs": "60_and_above_b0f9d41",
              "Unknown": "unknown_3e07f9e",
              "Mixed_group_of_people": "mixed_group_of_people_f34be4b"
            };

            const caseCategoryMapping = {
              "pending_categorization": "_pending_categorization__f2609f3",
              "request_info_1": "request_or_suggestion_debcecd",
              "request_info_2": "request_for_information___about_response_actors_be74193",
              "request_info_3": "request_for_information___about_information_provision_and_feedback_channels_35e1766",
              "request_info_4": "request_for_information___other_cec52c2",
              "request_assistance_1": "report_8751b89",
              "request_assistance_2": "request_for_assistance_or_services___civil_registration_and_legal_documentation_efc993f",
              "request_assistance_3": "request_for_assistance_or_services___other_9639ea2",
              "complaint_assist_activities_1": "observation__perception_or_belief_0230bfc",
              "complaint_assist_activities_2": "complaint_about_assistance_and_activities___issues_with_the_activities_or_assistance_services_provided__5b0d1fd",
              "complaint_assist_activities_3": "complaint_about_assistance_and_activities___issues_with_aid_items_11715aa",
              "complaint_assist_activities_4": "complaint_about_assistance_and_activities___other_c3d4da3",
              "complaint_behavior_1": "other_61db39d",
              "complaint_behavior_2": "complaint_about_the_behavior_of_aid_workers___allegation_of_child_marriage__similar_union_with_a_child_or_sexual_activity_with_a_child_7b260a2",
              "complaint_behavior_3": "complaint_about_the_behavior_of_aid_workers___allegation_of_harmful_practices_a7bc0bc",
              "complaint_behavior_4": "complaint_about_the_behavior_of_aid_workers___allegation_of_slave_forced_exploitative_labour_and_or_human_trafficking_c9bbb82",
              "complaint_behavior_5": "complaint_about_the_behavior_of_aid_workers___allegation_of_corruption__bribery__theft_or_fraud_a5a9862",
              "complaint_behavior_6": "complaint_about_the_behavior_of_aid_workers___allegation_of_negligence_on_professional_or_personal_capacity_cac54d9",
              "complaint_behavior_7": "complaint_about_the_behavior_of_aid_workers___allegation_of_physical_violence_or_verbal_abuse_d2854bf",
              "complaint_behavior_8": "complaint_about_the_behavior_of_aid_workers___allegation_of_harassment__including_sexual_harassment___a354c46",
              "complaint_behavior_9": "complaint_about_the_behavior_of_aid_workers___allegation_of_breach_of_duties_of_independence__neutrality__and_impartiality_7ef6b4b",
              "complaint_behavior_10": "complaint_about_the_behavior_of_aid_workers___allegation_of_less_serious_safeguarding_concerns_22ffb8a",
              "complaint_behavior_11": "complaint_about_the_behavior_of_aid_workers___allegation_of_unethical_evidence_activities_2521f33",
              "safety_security_1": "report_on_safety_or_security_issue_0ec19e4",
              "safety_security_2": "safety_and_security___missing_person_reports_991cd84",
              "safety_security_3": "safety_and_security___occupational_health_and_safety_incidents_a44e245",
              "safety_security_4": "safety_and_security___environmental_and_social_violations_and_incidents_fb29146",
              "safety_security_5": "safety_and_security___security_incidents_3693bfa",
              "safety_security_6": "safety_and_security___diversion_of_aid__dc68a2a",
              "safety_security_7": "safety_and_security___politicization_of_aid_aec953e",
              "safety_security_8": "safety_and_security___data_breaches_and_information_security_incidents_3da9b20",
              "safety_security_9": "safety_and_security___other_b4fa79a",
              "observations_suggestions_1": "observation_or_suggestion_aa54ec9",
              "observations_suggestions_2": "observations_and_suggestions___about_access_to_information_and_assistance_bc7a83b",
              "observations_suggestions_3": "observations_and_suggestions___about_community_beliefs_and_rumours_a6def10",
              "observations_suggestions_4": "observations_and_suggestions___other_773c9d9",
              "data_subject_request_1": "data_subject_request_bed8a87",
              "data_subject_request_2": "data_subject_request___information_about_the_personal_data_processing_1fd7b69",
              "data_subject_request_3": "data_subject_request___copy_of_own_personal_data_38d808c",
              "data_subject_request_4": "data_subject_request___delete_personal_data__partial_or_total___88c6d9a",
              "data_subject_request_5": "data_subject_request___correct_update_personal_data_260c6c9",
              "data_subject_request_6": "data_subject_request___limit_the_processing_of_personal_data_29b9a14",
              "data_subject_request_7": "data_subject_request___human_review_of_automated_decision_making_7182a3a",
              "issue_cfrm_1": "issue_interacting_with_the_cfrm_08dab07",
              "issue_cfrm_2": "data_subject_request____63f5862",
              "issue_cfrm_3": "issue_interacting_with_the_cfrm___abusive_malicious_feedback_providers_2c2ab65",
              "issue_cfrm_4": "issue_interacting_with_the_cfrm___cancelled_submissions_8fafbaa",
              "issue_cfrm_5": "issue_interacting_with_the_cfrm___other_f662a8e"
            };

            const programmaticAreaMapping = {
              "Pending_categorization": "local_integration_4721a6c",
              "Not_applicable": "sexual_exploitation_and_abuse__sea__c2b098e",
              "Adolescent_Development_and_Participation": "a__adolescent_development_and_participation_b19f2ba",
              "Access_and_Logistics": "logistics_f1ce006",
              "Camp_Coordination_and_Camp_Management": "camp_coordination_and_camp_management__cccm__e9d90b3",
              "Cash_Assistance_and_Social_Protection": "cash_assistance_086f72b",
              "Civil-Military_Coordination": "civil_military_coordination_87b1aca",
              "Child_Protection": "child_protection_72b4d71",
              "Disability_and_Inclusion": "disability_and_inclusion_e537ca8",
              "Early_Childhood_Development": "early_childhood_development_2c517c5",
              "Education": "education_d3bfe8f",
              "Early_Recovery": "early_recovery_c6e511c",
              "Emergency_Telecommunications": "emergency_telecommunications_ee553b2",
              "Energy_and_Environment": "energy_and_environment_fd73e2b",
              "Food_Security_and_Livelihoods": "food_security_0e10495",
              "Gender_Based_Violence": "gender_based_violence__gbv__781a991",
              "Health_and_Immunisation": "health_ee4020e",
              "Housing,_Land_and_Property": "housing__land_and_property_109da85",
              "Mental_Health_and_Psychosocial_Support": "mental_health_and_psychosocial_support__mhpss__abac8de",
              "Migrants": "migrants__registration__resettlement__rsd__repatriation__local_integration__complementary_pathways__etc___aa10d1b",
              "Mine_Action": "mine_action_f5161ba",
              "Nutrition": "nutrition_03abf98",
              "Parenting": "parenting_84b0c4c",
              "Protection": "protection_0e30687",
              "Shelter": "shelter_ae9eb74",
              "Social_and_Behaviour_Change": "social_and_behaviour_change__sbc__b64e02a",
              "WASH": "wash_d59fd40"
            };

            const locationMapping = {
              "1": "TUR001",
              "2": "TUR002",
              "3": "TUR003",
              "4": "TUR004",
              "68": "TUR068",
              "5": "TUR005",
              "6": "TUR006",
              "7": "TUR007",
              "75": "TUR075",
              "8": "TUR008",
              "9": "TUR009",
              "10": "TUR010",
              "74": "TUR074",
              "72": "TUR072",
              "69": "TUR069",
              "11": "TUR011",
              "12": "TUR012",
              "13": "TUR013",
              "14": "TUR014",
              "15": "TUR015",
              "16": "TUR016",
              "17": "TUR017",
              "18": "TUR018",
              "19": "TUR019",
              "20": "TUR020",
              "21": "TUR021",
              "81": "TUR081",
              "22": "TUR022",
              "23": "TUR023",
              "24": "TUR024",
              "25": "TUR025",
              "26": "TUR026",
              "27": "TUR027",
              "28": "TUR028",
              "29": "TUR029",
              "30": "TUR030",
              "31": "TUR031",
              "76": "TUR076",
              "32": "TUR032",
              "34": "TUR034",
              "35": "TUR035",
              "46": "TUR046",
              "78": "TUR078",
              "70": "TUR070",
              "36": "TUR036",
              "37": "TUR037",
              "38": "TUR038",
              "79": "TUR079",
              "71": "TUR071",
              "39": "TUR039",
              "40": "TUR040",
              "41": "TUR041",
              "42": "TUR042",
              "43": "TUR043",
              "44": "TUR044",
              "45": "TUR045",
              "47": "TUR047",
              "33": "TUR033",
              "48": "TUR048",
              "49": "TUR049",
              "50": "TUR050",
              "51": "TUR051",
              "52": "TUR052",
              "80": "TUR080",
              "53": "TUR053",
              "54": "TUR054",
              "55": "TUR055",
              "63": "TUR063",
              "56": "TUR056",
              "57": "TUR057",
              "73": "TUR073",
              "58": "TUR058",
              "59": "TUR059",
              "60": "TUR060",
              "61": "TUR061",
              "62": "TUR062",
              "64": "TUR064",
              "65": "TUR065",
              "77": "TUR077",
              "66": "TUR066",
              "67": "TUR067"
          };

            const vulnerabilityMapping = {
              "None": "none_9052aa8",
              "Alcohol_drug_abuse_in_family": "alcohol__drug_abuse_in_family_0e1da79",
              "Child_headed_household": "orphan_f6104f0",
              "HIV+": "hiv__64150e2",
              "IDP_Refugee_Statelessness": "statelessness_51c7096",
              "Member_of_marginalised_group": "member_of_marginalised_group__eg__due_to_religion__ethnicity__496febf",
              "Person_with_disability": "person_with_special_needs_afa807f",
              "Pregnant_or_lactating_woman": "idp_d535e6f",
              "Unaccompanied_or_separated_children": "refugee_4fa85ce",
              "Mixed_group_of_people": "mixed_group_of_people_e7aa51f"
            };

            const languageMapping = {
              "Language1": "language1",
              "Language2": "language4",
              "Language3": "language5",
              "Language4": "language6",
              "Language5": "language2",
              "Language6": "language7",
              "Other": "language8"
            };

            const consentFromMapping = {
              "Individual": "individual__self_reporting__e45b925",
              "Caregiver": "caregiver__legal_guardian__4df2a59",
              "Social_worker": "social_worker_0cd94f9",
              "Teacher": "teacher_99ba24d",
              "Other": "other_5b3b632"
            };

            const formatPreferredChannelOfCommunication = (text) => {
              if (text === null || text === undefined) {
                return '';
              }
              return text.replace(/_/g, ' ');
            };

            const checkDisclosure = (disclosure) => {
              if (disclosure) {
                return disclosure === "OK";
              }
              return false;
            };

            const formatRegistrationDate = (date) => {
              const parsedDate = dateFns.parse(date, "dd-MMM-yyyy", new Date());

              return dateFns.format(parsedDate, "yyyy-MM-dd");
            }

            //Perform input data mapping
            state.mappedData = {
              registration_date: formatRegistrationDate(state.data.registration_date),
              sex: genderMapping[state.data.sex],
              age_range_3df3bdb: ageRangeMapping[state.data.age_range],
              protection_status: caseCategoryMapping[state.data.case_category_80a3d81],
              protection_concerns:  (state.data.programmatic_area || "")
                .split(" ")
                .map(factor => programmaticAreaMapping[factor])
                .filter(Boolean),
              location_current: locationMapping[state.data.location],
              diversity_factor_s__98eb91b: (state.data.vulnerability_factor || "")
                .split(" ")
                .map(factor => vulnerabilityMapping[factor])
                .filter(Boolean),
              nationality: [nationalityMapping[state.data.nationality]],
              preferred_channel_of_communication_f25a28d: formatPreferredChannelOfCommunication(state.data.preferred_channel_of_communication),
              disclosure_other_orgs: checkDisclosure(state.data.disclosure_other_orgs),
              language: [languageMapping[state.data.language]],
              consent_assent_obtained_from_c4a5c9e: (state.data.consent || "")
                .split(" ")
                .map(factor => consentFromMapping[factor])
                .filter(Boolean)
            }

            return state;

          });

      Register-feedback-in-Primero:
        name: Register feedback in Primero
        adaptor: '@openfn/language-primero@3.1.0'
        credential: aleksa@openfn.org-PROD-Unicare-TUR-Primero
        body: |
          // //Create/Update case to be sent to primero
          fn(state => {
            state.attachments = state.data['attachments'];
            return state
          })

          upsertCase({
            externalIds: ["case_id"],
            data: state => ({
              case_id: state.data._uuid,
              registration_date: state.mappedData.registration_date,
              location_current: state.mappedData.location_current, 
              feedback_comment_f076498: state.data.feedback_comment,
              sex: state.mappedData.sex,
              name_first: state.data.name_first,
              name_last: state.data.name_last,
              age_range_3df3bdb: state.mappedData.age_range_3df3bdb,
              disclosure_other_orgs: state.mappedData.disclosure_other_orgs, 
              date_of_birth: state.data.date_of_birth,
              nationality: state.mappedData.nationality,
              preferred_channel_of_communication_f25a28d: state.mappedData.preferred_channel_of_communication_f25a28d, 
              protection_status: state.mappedData.protection_status,
              protection_concerns: state.mappedData.protection_concerns,
              telephone_current: state.data.channel_of_communication_phonenumber,
              email_b3fb5e0: state.data.channel_of_communication_email,
              address_current: state.data.channel_of_communication_physical_address,
              language: state.mappedData.language,
              consent_assent_obtained_from_c4a5c9e: state.mappedData.consent_assent_obtained_from_c4a5c9e,
              consent_source_other: state.data.consent_other,
              immediate_actions_taken_in_response_to_the_feedback_received_ecd46ba: state.data.immediate_actions,
              other_language_of_interaction_00ed07f: state.data.language_comment,
              diversity_factor_s__98eb91b: state.mappedData.diversity_factor_s__98eb91b,
              feedback_channel_eba5764: 'mobile_teams__field_staff__monitors_afdfc51',
              module_id: "primeromodule-cp",
            }),
          });

      Get-attachment-From-Inform:
        name: Get attachment From Inform
        adaptor: '@openfn/language-inform@1.0.1'
        credential: aleksa@openfn.org-Unicef-Inform
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          fn(state =>{
            state.primeroCaseId = state.data.id;
            const formId = state.references[0]._xform_id;
            const submissionId = state.references[0]._id;
            return { ...state, formId, submissionId };
          })

          getSubmission($.formId, $.submissionId);

          fn(state =>{
            state.attachments = state.data._attachments;
            return state;
          })

          fnIf($.attachments[0].id,
            downloadAttachment($.attachments[0].id, {
            filename: $.attachments[0].filename,
            parseAs: 'base64',
          })
          );

      Upload-attachment-to-Primero:
        name: Upload attachment to Primero
        adaptor: '@openfn/language-primero@3.1.0'
        credential: aleksa@openfn.org-PROD-Unicare-TUR-Primero
        body: |
          // Check out the Job Writing Guide for help getting started:
          // https://docs.openfn.org/documentation/jobs/job-writing-guide

          fn(async (state) => {
            const attachments = state.attachments[0]; 
            const imageEncodedString = state.data; 

            delete state.data; 

            state.data = {
              attachment: imageEncodedString,
              attachment_type: "image",         
              content_type: attachments.mimetype,
              date: new Date().toISOString(),
              field_name: "photos",            
              file_name: attachments.name,
              is_current: false
            };

            return state;
          });


          http.post(`cases/${$.primeroCaseId}/attachments`, $.data)

    triggers:
      webhook:
        type: webhook
        enabled: true
    edges:
      webhook->Transform-and-Map-data:
        source_trigger: webhook
        target_job: Transform-and-Map-data
        condition_type: always
        enabled: true
      Transform-and-Map-data->Register-feedback-in-Primero:
        source_job: Transform-and-Map-data
        target_job: Register-feedback-in-Primero
        condition_type: on_job_success
        enabled: true
      Register-feedback-in-Primero->Get-attachment-From-Inform:
        source_job: Register-feedback-in-Primero
        target_job: Get-attachment-From-Inform
        condition_type: js_expression
        condition_label: Attachment Exists
        condition_expression: |
          state.data.id && state.attachments && state.attachments != null

        enabled: true
      Get-attachment-From-Inform->Upload-attachment-to-Primero:
        source_job: Get-attachment-From-Inform
        target_job: Upload-attachment-to-Primero
        condition_type: on_job_success
        enabled: true
